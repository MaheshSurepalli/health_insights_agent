name: Frontend â€” Build & Deploy to AKS

on:
  push:
    branches: [ "main" ]
    paths:
      - "frontend/**"
      - "k8s/**"
      - ".github/workflows/frontend-ci-cd.yml"
  workflow_dispatch: {}

concurrency:
  group: frontend-${{ github.ref }}
  cancel-in-progress: true

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/health-insights-frontend:${{ github.sha }}
            ${{ env.ACR_LOGIN_SERVER }}/health-insights-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${KUBE_CONFIG}" > $HOME/.kube/config
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Apply k8s (namespace, svc, deploy)
        run: kubectl apply -k k8s/

      - name: Set image to this commit & wait
        run: |
          kubectl -n hia set image deployment/hia-frontend \
            web=${{ env.ACR_LOGIN_SERVER }}/health-insights-frontend:${{ github.sha }}
          kubectl -n hia rollout status deployment/hia-frontend --timeout=300s

      - name: Show frontend public IP
        run: |
          kubectl -n hia get svc hia-frontend -o wide
          IP=$(kubectl -n hia get svc hia-frontend -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "Frontend EXTERNAL-IP: $IP"

      - name: Debug on failure
        if: failure()
        run: |
          set +e
          kubectl -n hia get pods -o wide
          echo "----- Events -----"
          kubectl -n hia describe deployment hia-frontend | sed -n '/Events:/,$p'
          for p in $(kubectl -n hia get pods -l app=hia-frontend -o name); do
            echo "### $p"
            kubectl -n hia describe $p | sed -n '/Events:/,$p'
            kubectl -n hia logs $p --tail=200 || true
          done
